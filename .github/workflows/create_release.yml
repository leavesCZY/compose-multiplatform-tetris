name: create release

on:
  push:
    branches: [ master ]
    paths:
      - "**/workflows-trigger.properties"

jobs:

  current-time:
    runs-on: ubuntu-latest
    name: get current time
    outputs:
      currentTime: ${{steps.currentTime.outputs.formattedTime}}
    steps:
      - id: currentTime
        uses: josStorer/get-current-time@v2
        with:
          format: YYYY.MM.DD
          utcOffset: "+08:00"

  create-release-distribution:
    strategy:
      matrix:
        os: [ windows-latest , ubuntu-latest , macos-13 , macos-14 ]
    runs-on: ${{ matrix.os }}
    name: create release distribution
    needs: current-time

    steps:
      - if: matrix.os == 'macos-14'
        name: setup jdk
        uses: actions/setup-java@v5
        with:
          distribution: "zulu"
          java-version: "21"
          architecture: x64

      - if: matrix.os != 'macos-14'
        name: setup jdk
        uses: actions/setup-java@v5
        with:
          distribution: "zulu"
          java-version: "21"
          architecture: x64

      - name: checkout
        uses: actions/checkout@v5

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - if: matrix.os == 'windows-latest'
        name: assembleRelease
        run: ./gradlew assembleRelease

      - name: packageReleaseDistributionForCurrentOS
        run: ./gradlew packageReleaseDistributionForCurrentOS

      - if: matrix.os == 'windows-latest'
        name: rename file
        run: |
          mv ./composeApp/build/compose/binaries/main-release/exe/compose-multiplatform-tetris-1.0.0.exe ./composeApp/build/compose/binaries/main-release/exe/compose-multiplatform-tetris-windows-x64.exe

      - if: matrix.os == 'windows-latest'
        name: zip AppImage
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: "zip"
          directory: "./composeApp/build/compose/binaries/main-release/app"
          filename: "compose-multiplatform-tetris-windows-x64.zip"

      - if: matrix.os == 'ubuntu-latest'
        name: rename file
        run: |
          mv /home/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/rpm/compose-multiplatform-tetris-1.0.0-1.x86_64.rpm /home/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/rpm/compose-multiplatform-tetris-linux-x86_64.rpm
          mv /home/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/deb/compose-multiplatform-tetris_1.0.0_amd64.deb    /home/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/deb/compose-multiplatform-tetris-linux-amd64.deb

      - if: matrix.os == 'macos-13'
        name: rename file
        run: |
          mv /Users/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/dmg/compose-multiplatform-tetris-1.0.0.dmg /Users/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/dmg/compose-multiplatform-tetris-mac-x64.dmg

      - if: matrix.os == 'macos-14'
        name: rename file
        run: |
          mv /Users/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/dmg/compose-multiplatform-tetris-1.0.0.dmg /Users/runner/work/compose-multiplatform-tetris/compose-multiplatform-tetris/composeApp/build/compose/binaries/main-release/dmg/compose-multiplatform-tetris-mac-arm64.dmg

      - name: create a release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          generateReleaseNotes: false
          artifactErrorsFailBuild: false
          body: "create by workflows"
          artifacts: "**/compose-multiplatform-tetris-android.apk,**/exe/*.exe,**/compose-multiplatform-tetris-windows-x64.zip,**/deb/*.deb,**/rpm/*.rpm,**/dmg/*.dmg"
          tag: ${{needs.current-time.outputs.currentTime}}
          name: ${{needs.current-time.outputs.currentTime}}
          token: ${{secrets.ACTION_TOKEN}}